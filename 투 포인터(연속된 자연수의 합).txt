//🧩 문제 이름 : 2018번 - 수들의 합 5(실버 5)
//문제
//어떤 자연수 N은, 몇 개의 연속된 자연수의 합으로 나타낼 수 있다.
//당신은 어떤 자연수 N(1 ≤ N ≤ 10, 000, 000)을 입력받았을 때,
//이 자연수를 연속된 자연수의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.
//
//입력
//첫째 줄에 정수 N이 주어진다.
//
//출력
//입력으로 주어진 N을 연속된 자연수의 합으로 나타내는 방법의 수를 출력한다.
//
//예제 입력 1
//15
//예제 출력 1
//4
//예제 설명
//15를 연속된 자연수의 합으로 나타내는 방법은 다음과 같다.
//
//1 + 2 + 3 + 4 + 5
//
//4 + 5 + 6
//
//7 + 8
//
//15
//
//총 4가지
//
//💡 핵심 아이디어
//이 문제는 투 포인터(또는 슬라이딩 윈도우) 알고리즘으로 효율적으로 풀 수 있습니다.
//아이디어는 다음과 같습니다 :
//
//연속된 자연수들의 합을 찾기 위해, 시작점과 끝점을 잡고 범위를 늘려가며 합을 확인합니다.
//
//시작점과 끝점이 모두 1부터 시작해서 N 이하로 움직이면서 합을 관리합니다.
//
//합이 N보다 작으면 end를 증가시키고,
//합이 N보다 크면 start를 증가시킵니다.
//합이 정확히 N이라면 카운트를 증가시키고 end를 증가시킵니다.
//
//시간 복잡도는 O(N)으로 매우 빠릅니다.
//


#include <iostream>
using namespace std;


int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n;

	cin >> n;

	int left = 0;
	int right = 0;
	int sum = 0;
	int count = 1;
	while (right != n) {
		if (sum == n) {
			count++;
			right++;
			sum += right;
		}
		else if (sum > n) {
			left++;
			sum -= left;
		}
		else {
			right++;
			sum += right;
		}
	}

	cout << count << "\n";
}











