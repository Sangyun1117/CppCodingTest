// 🧩 백준 2252번 - 줄 세우기 (Gold 3)
//         📘 문제 설명
//         N명의 학생들이 있다.
//         일부 학생들은 다른 학생들보다 앞에 서야 한다는 조건이 있다.
//         이 조건을 만족하면서 학생들을 일렬로 줄 세우려 한다.

//         예를 들어, 1번 학생은 2번 학생보다 앞에 서야 하고, 3번 학생은 2번 학생보다 앞에 서야 한다면,
//         1번 → 3번 → 2번과 같이 줄을 세울 수 있다.

//         📥 입력
//         첫째 줄에 N(1 ≤ N ≤ 32,000), M(1 ≤ M ≤ 100,000)

//         다음 M개의 줄에 "A B"가 주어짐.
//         → A는 B보다 먼저 서야 한다는 의미.

//         📤 출력
//         한 줄로 가능한 순서대로 학생들의 번호를 출력한다.

//         예제 입력1
//         3 2
//         1 3
//         2 3
//         예제 출력1
//         1 2 3
//         예제 입력2
//         4 2
//         4 2
//         3 1
//         예제 출력2
//         4 2 3 1
//         답이 여러 개일 경우 아무거나 출력 가능.

//         🧠 핵심 아이디어
//         위상 정렬 (Topological Sort)

//         진입 차수가 0인 노드를 먼저 큐에 넣고, 그 다음 노드로 차수 줄이고 차수가 0이되면 큐에 추가

#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m;
    cin >> n >> m;
    vector<vector<int>> rule(n + 1);

    int observer[n + 1] = {};
    for (int i = 0; i < m; i++)
    {
        int a, b;
        cin >> a >> b;
        rule[a].push_back(b);
        observer[b]++;
    }

    queue<int> q;

    for (int i = 1; i < n + 1; i++)
    {
        if (observer[i] == 0)
            q.push(i);
    }

    while (!q.empty())
    {
        int now = q.front();
        q.pop();
        cout << now << " ";

        for (int next : rule[now])
        {
            if (--observer[next] == 0)
                q.push(next);
        }
    }

    return 0;
}
